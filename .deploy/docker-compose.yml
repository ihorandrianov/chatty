name: chat
networks:
  hello-chat:
volumes:
  chat-data:
    driver: local
services:
  api:
    container_name: api
    restart: always
    env_file: ../.env
    build:
      dockerfile: Dockerfile
      context: ../
      args:
        - DEFAULT_STATIC_FOLDER=${DEFAULT_STATIC_FOLDER}
    networks:
      - hello-chat
    depends_on:
      db:
        condition: service_healthy
      migration:
        condition: service_completed_successfully
    ports:
      - "3000:3000"

  migration:
    build:
      dockerfile: Dockerfile
      context: ../
      args:
        - DEFAULT_STATIC_FOLDER=${DEFAULT_STATIC_FOLDER}
    command: npx prisma migrate deploy
    env_file: ../.env
    depends_on:
      db:
        condition: service_healthy
    networks:
      - hello-chat
  db:
    image: postgres:14-alpine
    container_name: postgres
    restart: always
    env_file: ../.env

    ports:
      - "5432:5432"
    networks:
      - hello-chat
    volumes:
      - chat-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
